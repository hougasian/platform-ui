@use "config";
@use "mixins";
@use "variables";
@use "sass:map";

// Block Grid
//
// Blocks are Platform UI's core structural component. Here are some of the features and concepts behind our grid.
//
// ### Blocks
//
// - Blocks are based on a 12 column grid, they allow content to be evenly distributed. **They are a mobile first approach.**
// - Blocks can have responsive modifiers attached directly to them
// - Blocks have responsive modifiers to override specific 'block-{ number }' columns; i.e., Four `block` children in a `block-container` with `tablet-up-2` applied will appear as two columns when viewed in the tablet viewport.
//
// ### Block Containers
//
// - All block grids start with a wrapper of `block-container` that is set to `display: flex` with `flex-wrap: wrap`.
// - `block-container` can also act as a row.
// - `block-container` has modifiers to allow auto-placement based on responsive breakpoints.
// - Using `block-container` and adding `block` children will give you an evenly distributed block grid.
// - `block-container` has responsive modifiers can be placed on the `block-{number}` level item as well. The `block-{number}` will always reflect the mobile, smallest breakpoint, value.
//
// ### 12 Columns
//
// Container: `block-container blocks-px-2 blocks-py-2`
//
// <div class="block-container blocks-px-2 blocks-py-2">
//   <div class="block block-1">
//     <div class="pui-card">
//     <code>block block-1</code>
//     </div>
//   </div>
//   <div class="block block-11">
//     <div class="pui-card">
//     <code>block block-11</code>
//     </div>
//   </div>
//   <div class="block block-2">
//     <div class="pui-card">
//     <code>block block-2</code>
//     </div>
//   </div>
//   <div class="block block-10">
//     <div class="pui-card">
//     <code>block block-10</code>
//     </div>
//   </div>
//   <div class="block block-3">
//     <div class="pui-card">
//     <code>block block-3</code>
//     </div>
//   </div>
//   <div class="block block-9">
//     <div class="pui-card">
//     <code>block block-9</code>
//     </div>
//   </div>
//   <div class="block block-4">
//     <div class="pui-card">
//     <code>block block-4</code>
//     </div>
//   </div>
//   <div class="block block-8">
//     <div class="pui-card">
//     <code>block block-8</code>
//     </div>
//   </div>
//   <div class="block block-5">
//     <div class="pui-card">
//     <code>block block-5</code>
//     </div>
//   </div>
//   <div class="block block-7">
//     <div class="pui-card">
//     <code>block block-7</code>
//     </div>
//   </div>
//   <div class="block block-6">
//     <div class="pui-card">
//     <code>block block-6</code>
//     </div>
//   </div>
//   <div class="block block-6">
//     <div class="pui-card">
//     <code>block block-6</code>
//     </div>
//   </div>
//   <div class="block block-7">
//     <div class="pui-card">
//     <code>block block-7</code>
//     </div>
//   </div>
//   <div class="block block-5">
//     <div class="pui-card">
//     <code>block block-5</code>
//     </div>
//   </div>
//   <div class="block block-8">
//     <div class="pui-card">
//     <code>block block-8</code>
//     </div>
//   </div>
//   <div class="block block-4">
//     <div class="pui-card">
//     <code>block block-4</code>
//     </div>
//   </div>
//   <div class="block block-9">
//     <div class="pui-card">
//     <code>block block-9</code>
//     </div>
//   </div>
//   <div class="block block-3">
//     <div class="pui-card">
//     <code>block block-3</code>
//     </div>
//   </div>
//   <div class="block block-10">
//     <div class="pui-card">
//     <code>block block-10</code>
//     </div>
//   </div>
//   <div class="block block-2">
//     <div class="pui-card">
//     <code>block block-2</code>
//     </div>
//   </div>
//   <div class="block block-11">
//     <div class="pui-card">
//     <code>block block-11</code>
//     </div>
//   </div>
//   <div class="block block-1">
//     <div class="pui-card">
//     <code>block block-1</code>
//     </div>
//   </div>
//   <div class="block block-12">
//     <div class="pui-card">
//     <code>block block-12</code>
//     </div>
//   </div>
// </div>
//
// ### Block Spacing
//
// - Spacing is based on [Platform UI spacing]() with the following changes in  behaviour; Attaching padding to the horizontal axis, `px-2`, with a modifier of `blocks` will add that spacing to the `block-container`. 
// - Without the `blocks` modifier, placing `block-container px-2` will apply the horizontal axis padding to the `block` children within the container.
//
// | Spacing | padding |  |  |
// |-------------|------------|------------|---------------|
// | Axis        | x          | y
// | Direction   |t           | b          | l     | r     |
// | Type        | padding | `flex-grow: 1`| `width: auto` |
// | Spacer       |  `block-shrink` | `block--fill` | `block-tablet-shrink` |
//
// Spacers
//
// ### Standard Grid
//
// Container: `block-container blocks-px-2 blocks-py-2`
//
// <div class="block-container blocks-px-2 blocks-py-2">
//   <div class="block-3">
//     <div class="pui-card">
//       <code>block-3</code>
//     </div>
//   </div>
//   <div class="block-3">
//     <div class="pui-card">
//       <code>block-3</code>
//     </div>
//   </div>
//   <div class="block-3">
//     <div class="pui-card">
//       <code>block-3</code>
//     </div>
//   </div>
//   <div class="block-3">
//     <div class="pui-card">
//       <code>block-3</code>
//     </div>
//   </div>
// </div>
//
// ### Responsive Grid with Flex
//
// Container: `block-container blocks-px-2 blocks-py-2 tablet-up-3 laptop-up-4`
//
// <div class="block-container blocks-px-2 blocks-py-2 tablet-up-3 laptop-up-4">
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block block--fill">
//     <div class="pui-card">
//       <code>block block-fill</code>
//     </div>
//   </div>
// </div>
//
// Container: `block-container blocks-px-2 blocks-py-2 tablet-up-3 laptop-up-4`
//
// <div class="block-container blocks-px-2 blocks-py-2 tablet-up-3 laptop-up-4">
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block block--shrink">
//     <div class="pui-card">
//       <code>block block-shrink</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
// </div>
//
// | Block Flex Utilities | | |  |
// |-------------|------------|------------|---------------|
// | [Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) property| `flex-shrink: 1`| `flex-grow: 1`| `width: auto` |
// | class      | `block-shrink` | `block--fill` | `block-tablet-shrink` |
//
//
// ### Block grid breakpoints
//
// Spacing in Platform UI is based on `rem` values with the exception of breakpoints.
//
// - Attaching a resposive modifier to 'block-container' uses individual `block` elements and will affect the number of columns show in a particular viewport.
// - Attaching a resposive modifier to `block block-{ number }` will affect the number of columns show in a particular viewport as above. **Their approaches cannot be combined.** You can either modify the `block-container` with `block` children, or the block level `block block-{ number }`.
//
// ### Responsive Block Container
//
// Container: `block-container blocks-px-2 blocks-py-2 laptop-up-3 desktop-up-4`
//
// <div class="block-container blocks-px-2 blocks-py-2 laptop-up-3 desktop-up-4">
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
//   <div class="block">
//     <div class="pui-card">
//       <code>block</code>
//     </div>
//   </div>
// </div>
//
// ### Responsive Blocks
//
// Container: `block-container blocks-px-2 blocks-py-2`
//
// <div class="block-container blocks-px-2 blocks-py-2">
//   <div class="block block-8 laptop-up-3 desktop-up-4">
//     <div class="pui-card">
//       <code>block block-8 laptop-up-3 desktop-up-4</code>
//     </div>
//   </div>
//   <div class="block block-4 laptop-up-3 desktop-up-4">
//     <div class="pui-card">
//       <code>block block-4 laptop-up-3 desktop-up-4</code>
//     </div>
//   </div>
//   <div class="block block-4 laptop-up-3 desktop-up-4">
//     <div class="pui-card">
//       <code>block block-4 laptop-up-3 desktop-up-4</code>
//     </div>
//   </div>
//   <div class="block block-8 laptop-up-3 desktop-up-4">
//     <div class="pui-card">
//       <code>block block-8 laptop-up-3 desktop-up-4</code>
//     </div>
//   </div>
// </div>
//
// | Breakpoints | 0px        | 768px      | 991px         | 1240px     | 1800px      |
// |-------------|------------|------------|---------------|------------|-------------|
// | label       | mobile     | tablet     | lg-tablet     | laptop     | desktop     |
// | prefix      | `mobile-up-` | `tablet-up-` | `lg-tablet-up-` | `laptop-up-` | `desktop-up-` |
//
// Styleguide Layout.Blocks



// Block layout
.block-container {
  $self: &;
  display: flex;
  flex-wrap: wrap;

  > .block {
    width: 100%;

    &--full {
      width: 100% !important;
    }

    &--fill {
      flex-grow: 1;
    }

    &--shrink {
      width: auto !important;
    }
  }
  @each $key, $val in variables.$pui-columns {
    .block-#{$val} {
      width: calc(#{$key} * 100%);

      &.block-container {
        width: calc(#{$key} * 100%);
      }
    }
  }

  @each $breakpoint, $name in config.$breakpoints {
    @each $key, $val in variables.$pui-columns {
      .block-#{$breakpoint}-up-#{$val} {
        @include mixins.breakpoint(#{$name}, min) {
          width: calc(#{$key} * 100%);
        }
      }
    }
  }

  @each $breakpoint, $name in config.$breakpoints {
    .block-#{$breakpoint} {
      @include mixins.breakpoint(#{$name}, min) {

        &--full {
          width: 100% !important;
        }

        &--fill {
          flex-grow: 1;
        }

        &--shrink {
          width: auto !important;
        }
      }
    }
  }

  // Add padding and or margin to container
  // as well as the blocks within the block-container
  @each $prop, $letter in (margin: m, padding: p) {
    @each $direction, $d in variables.$xy-border {
      @each $unit, $rem in variables.$spacers {
        // top, right, bottom, left
        &.blocks-#{$letter}#{$d}-#{$unit} {
          > .block {
            #{$prop}-#{$direction}: #{$rem};
          }
        }

        // left and right
        &.blocks-#{$letter}x-#{$unit} {
          margin-left: -#{$rem};
          width: calc(100% + #{$rem} * 2);

          > [class*="blocks-px"] {
            margin-left: auto;
          }

          > .block {
            #{$prop}-left: $rem;
            #{$prop}-right: $rem;
          }
        }

        // top and bottom
        &.blocks-#{$letter}y-#{$unit} {
          > .block {
            #{$prop}-top: $rem;
            #{$prop}-bottom: $rem;
          }
        }
      }
    }
  }

  // Add these classes ex: tablet-up-2 to the
  // container to change the width of the block
  // elements inside the block-container
  @each $breakpoint, $name in config.$breakpoints {
    @each $key, $val in variables.$pui-columns {
      &.#{$breakpoint}-up-#{$val} {

        &[class*="blocks-px"] {
          
          > .block {

            $mapped__keys : map.keys(config.$breakpoints);
            // get index of the current name passed
            $index : (index($mapped__keys, $breakpoint));
            @if $index {
              // if there is another key above the selected key, run this
              @if $index < length(config.$breakpoints) {
                @media screen and (min-width : ($name)) and (max-width: map.get(config.$breakpoints, mixins.nextKey($breakpoint) )  - 1 ) {
                  &:nth-child(#{$val}n+1) {
                    padding-left: 0;
                  }
      
                  &:nth-child(#{$val}n+#{$val}) {
                    padding-right: 0;
                  }
                }
              }
            }
          }
        }

        > .block {
          @include mixins.breakpoint(#{$name}, min) {
            width: calc(100% / #{$val});
          }
        }
      }
    }
  }
}
