// Blocks
// 
// In this section you will find options for your layout needs. To get a specific layout you will need to start with 
// 2 classes. `block-container` and `block`. `block-container` is the wrapper class that contains the block or 
// blocks depending on how many you have. `block` is the class that will be on the element inside the container. These
// classes can be added to any element, although in some cases you may need to wrap a specific element in a 
// `<div class="block">`. 
// 
// This layout is based on a 12 column grid. So if you want a `block` to take up half the width of the row it is on, you
// would use the class `block-6`, 6 being half of 12. For a row containing 3 `blocks` you would use `block-4` and so on.
// Each `block` has a default `width: 100%`. This width will change as you add different size classes to the `block`.
// 
// You can change the width of a block by using responsive size classes. These classes are tied to our `$breakpoints` map.
// ```css
// $breakpoints: (
//   mobile: 768px,
//   laptop: 1240px,
//   desktop-lg: 1800px
// );
// ```
// For example, if you wanted a block to take up 3 columns at the mobile breakpoint, you would add the class `block-mobile-3`
//  to `block`. It's probably best to build these layouts thinking "mobile-first". So when you use the class `block-mobile-3` 
// know that that will that effect from 768px up, or to put in media query terms. `@media(min-width: 768px) {}`.
// 
// **Note:** Some examples also use the class `rim-card`. This is for style guide purposes only.
// 
// Markup:
// <div class="block-container">
//   <div class="rim-card block block-mobile-6 block-laptop-3">
//     block-mobile-6 block-laptop-3
//   </div>
//   <div class="rim-card block block-mobile-6 block-laptop-3">
//     block-mobile-6 block-laptop-3
//   </div>
//   <div class="rim-card block block-mobile-6 block-laptop-3">
//     block-mobile-6 block-laptop-3
//   </div>
//   <div class="rim-card block block-mobile-6 block-laptop-3">
//     block-mobile-6 block-laptop-3
//   </div>
// </div>
// 
// If you scale the screen you will see the change in width on the blocks.
// 
// Weight: 4
// 
// Styleguide Layout.blocks

// Blocks Wrapper
// 
// You can add the resposinve classes to the `.block-container` wrapper rather than the `.block` elements.
// 
// Markup:
// <div class="block-container blocks-p-2 mobile-up-3 laptop-up-4">
//   <div class="block">
//     <div class="rim-card">
//       Test
//     </div>
//   </div>
//   <div class="block">
//     <div class="rim-card">
//       Test
//     </div>
//   </div>
//   <div class="block">
//     <div class="rim-card">
//       Test
//     </div>
//   </div>
//   <div class="block">
//     <div class="rim-card">
//       Test
//     </div>
//   </div>
// </div>
// 
// Weight: 5
// 
// Styleguide Layout.blocks.Wrapper


// Block layout
.block-container {
  $self: &;
  display: flex;
  flex-wrap: wrap;

  > .block { 
    width: 100%;

    &--full {
      width: 100% !important;
    }

    &--fill {
      flex-grow: 1;
    }

    &--shrink {
      width: auto !important;
    }
  }
  @each $key, $val in $rim-columns {
    .block-#{$val} {
      width: calc(100% / #{$val});
    }
  }

  @each $breakpoint, $name in $breakpoints {
    @each $key, $val in $rim-columns {
      .block-#{$breakpoint}-#{$val} {
        @include breakpoint(#{$name}, min) {
          width: calc(#{$key} * 100%);

          &--full {
            width: 100% !important;
          }

          &--fill {
            flex-grow: 1;
          }

          &--shrink {
            width: auto !important;
          }
        }
      }
    }
  }

  // Add padding and or margin to container 
  // as well as the blocks within the block-container
  @each $prop, $letter in (margin: m, padding: p) {
    @each $direction, $d in $xy-border {
      @each $unit, $rem in $spacers {
        // top, right, bottom, left
        &.blocks-#{$letter}#{$d}-#{$unit} {
          > .block {
            #{$prop}-#{$direction}: #{$rem};
          }
        }

        // left and right
        &.blocks-#{$letter}x-#{$unit} {
          margin-left: -#{$rem};
          width: calc(100% + #{$rem} * 2);
          > .block {
            #{$prop}-left: $rem;
            #{$prop}-right: $rem;
          }
        }

        // top and bottom
        &.blocks-#{$letter}y-#{$unit} {
          > .block {
            #{$prop}-top: $rem;
            #{$prop}-bottom: $rem;
          }
        }
      }
    }
  }

  // Add these classes ex: mobile-up-2 to the 
  // container to change the width of the block 
  // elements inside the block-container
  @each $breakpoint, $name in $breakpoints {
    @each $key, $val in $rim-columns {
      &.#{$breakpoint}-up-#{$val} {
        
        > .block {
          @include breakpoint(#{$name}, min) {
            width: calc(100% / #{$val});
          }
        }
      }
    }
  }
}
