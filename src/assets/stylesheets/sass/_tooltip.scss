@use "config";
@use "mixins";
@use "variables";
@use "sass:map";
// Tooltip
//
// Add your tooltip text to a `data-pui-tooltip` attribute on any item you want a tooltip.
//
// To specify the placement of your tooltip, add a `tooltip-{direction}` class. Directions include,
// top, left, bottom, right.
//
// Adding the class `tooltip-inline` will add a dashed underline to identify the tooltip. See example below.
//
// We use a font icon for our tooltip, but we don't want the hover to take place on the icon.
// Be sure to add the tooltip data attribute to the `<div>` wrapper instead. Place any color changes,
// whether they be a hover or not, on the `<div>` as well. This will ensure that our tooltip text
// does not render a different font due to the icon having the font-awesome font style.
// 
// If you want a tooltip to be mobile friendly, add the class `tooltip-mobile`. This will ensure that 
// the tooltip, when fired, will be centered in the middle of the page. This will happen within the 
// mobile breakpopint. In platform UI's case, below `768px`.
//
// Markup:
// <div class="block-container pb-3 flex flex--justify-between">
//   <div class="tooltip-right" data-pui-tooltip="This is a right facing tooltip.">right</div>
//   <div class="tooltip-bottom" data-pui-tooltip="This is a bottom facing tooltip.">bottom</div>
//   <div class="tooltip-top" data-pui-tooltip="This is a top facing tooltip.">top</div>
//   <div class="tooltip-left" data-pui-tooltip="This is a left facing tooltip.">left</div>
// </div>
// <div class="block-container pb-3">
//   <p>Lorem ipsum dolor sit amet, <span data-pui-tooltip="This is a default tooltip with data-inline." class="tooltip-inline">consectetur</span> adipiscing elit. Maecenas mi nunc, egestas id consectetur a, consectetur a lorem. Maecenas interdum enim felis, eget fringilla massa rhoncus sed.
// </div>
// <div class="block-container pb-3">
//   <div class="tooltip-right" data-pui-tooltip="Not a true help tooltip.">
//     <i class="pi-help-solid" focusable="false" aria-hidden="true"></i>
//   </div>
// </div>
// <p>Mobile tooltip.</p>
// <div class="block-container pb-3">
//   <div class="tooltip-right tooltip-mobile" data-pui-tooltip="This tooltip is centered on a mobile screen.">
//     <i class="pi-help-solid" focusable="false" aria-hidden="true"></i>
//   </div>
// </div>
// <div class="tooltip-right" data-pui-tooltip="This is what our tooltips look like.">Tooltip</div>
//
// Styleguide Components.Tooltip


[data-pui-tooltip] {

  $triangle: map.get(config.$radius, 'default');
  $background-color: rgba(map.get(variables.$greyscale, 'dark'), .9);

  cursor: pointer;
  line-height: 1;
  position: relative;

  &::after {
    background-color: $background-color;
    border-radius: $triangle;
    color: map.get(variables.$greyscale, 'white');
    content: attr(data-pui-tooltip);
    font-size: map.get(config.$fonts, 'size');
    font-size: map.get(variables.$font-percentage, 'sm');
    font-weight: normal;
    line-height: 1.15rem;
    opacity: 0;
    padding: map.get(variables.$spacers, 1) map.get(variables.$spacers, 2);
    position: absolute;
    text-align: center;
    text-transform: none;
    transition: opacity config.$transitions;
    visibility: hidden;
    white-space: nowrap;
    z-index: 1;
  }

  @each $direction, $d in variables.$xy-border {
    &.tooltip-#{$direction} {
      // arrows
      &::before {
        border-style: solid;
        border-width: $triangle;
        content: "";
        opacity: 0;
        position: absolute;
        transition: opacity config.$transitions;
        visibility: hidden;
        @if $direction == top {
          border-color: $background-color transparent transparent transparent;
          top: 0;
          left: 50%;
          margin-left: -$triangle;
        } @else
        if $direction == bottom {
          border-color: transparent transparent $background-color transparent;
          bottom: 0;
          left: 50%;
          margin-left: -$triangle;
        } @else
        if $direction == left {
          border-color: transparent transparent transparent $background-color;
          top: $triangle;
          right: calc(110% - #{$triangle});
          margin-top: -$triangle;
        } @else
        if $direction == right {
          border-color: transparent $background-color transparent transparent;
          top: 50%;
          top: $triangle;
          left: calc(110% - #{$triangle});
          margin-top: -$triangle;
        }
      }

      &::after {
        @if $direction == top {
          bottom: 100%;
          left: 50%;
          transform: translate(-50%);
        } @else
        if $direction == bottom {
          top: 100%;
          left: 50%;
          transform: translate(-50%);
        } @else
        if $direction == left {
          top: -$triangle;
          right: calc(110% + #{$triangle});
        } @else
        if $direction == right {
          top: -$triangle;
          left: calc(110% + #{$triangle});
        }
      }
    }
  }

  &.tooltip-mobile {
    @include mixins.breakpoint(tablet, max) {
      &::before {
        display: none;
      }

      &:after {
        font-size: 1rem;
        max-width: 20rem;
        position: fixed;
        bottom: auto; top: 50%;
        left: 50%;
        text-align: left;
        transform: translate(-50%);
        white-space: normal;
      }
    }
  }

  &.tooltip-inline {
    border-bottom: 2px dotted map.get(config.$brand-colors, 'med-blue');
    display: inline-block;
  }

  &:hover::after,
  &[class*=tooltip-]:hover::before {
    visibility: visible;
    opacity: 1;
  }
}

// not fully realized :(
.pui-tooltip--help {
  color: map.get(config.$brand-colors, 'med-blue') !important;
}
