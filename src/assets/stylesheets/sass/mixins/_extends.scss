@use "config";
@use "mixins";
@use "variables";
@use "sass:map";

// Extends
//
// We use extends throughout platform-ui. You can extend a block of scss by using `@extend {class-name}` or, how we
// typically use extends is by extending a placeholder selector. Rather than a class `@extend %example-placeholder`.
// These are style rules that we only want to extend.
//
// **You can find a list of extendable placeholders below:**
// 
// | Extend                     |                            |                          |                          |
// | -------------------------- | ---------------------------| ------------------------ | ------------------------ |
// | `%flex-center`             | `%truncate-with-ellipsis`  | `%inverted`              | `%scrollbar`             |
// | `%rotate-45`               | `%rotate-90`               | `%rotate-180`            |                          |
// 
//
// Styleguide _getting-started.SASS.Extends


%flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

%truncate-with-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

%rotate-45 {
  transform: rotate(45deg);
}

%rotate-90 {
  transform: rotate(90deg);
}

%rotate-180 {
  transform: rotate(180deg);
}

%inverted {
  color: map.get(variables.$greyscale, 'white') !important;
  transition: config.$transitions;
}

%scrollbar {

  &::-webkit-scrollbar {
    @include mixins.square(.5rem);
  }

  &::-webkit-scrollbar-thumb {
    background-clip: padding-box;
    background-color: map.get(variables.$greyscale, 'light' );
    border-radius: map.get(variables.$radius, 'button' );
  }

  &::-webkit-scrollbar-track {
    background-color: map.get(variables.$greyscale, 'lighter' );
    border-radius: map.get(variables.$radius, 'button' );
  }
}

%basic-circle {
  border-radius: map.get(variables.$radius, 'round');
  @include mixins.square(variables.$spacer * 1.5);
  @extend %flex-center;
}
