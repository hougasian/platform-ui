@use "config";
@use "mixins";
@use "variables";
@use "sass:color";
@use "sass:map";
@use "sass:math";

// Tabs
//
// The content for a tabbed section needs to live inside the `.pui-tabs` class. 
//
// The aria attributes are important to the funcationality of the tabs as well. The active tab styles
// come from `aria-selected="true"` being set on the tab. The corresponding tab content is displayed
// by the removal of the `hidden` attribute.
//
// Be sure that the `href` value on the `pui-tab__acnchor` matches that of the corresponding
// `pui-tab-panel` id. This is key for links that contain the hash in the url.
//
// The tabs themselves or the `.pui-tab` have a specific width of `16rem` as well as a specific
// height of `4rem`. The width can be changed using the [blocks layout method](/styleguide/section-layout.html#kssref-layout-blocks).
//
// Markup:
// <div class="pui-tabs">
//   <ul class="pui-tab-list" role="tablist" aria-label="Sample Tabs">
//     <li class="pui-tab">
//       <a href="#contracts-active" class="pui-tab__anchor" role="tab" aria-selected="true" aria-controls="contracts-active" id="pui-tab-1" tabindex="0">
//         <i class="pi-folder-open" focusable="false" aria-hidden="hidden"></i><span class="pui-tab__title">Active</span>
//       </a>
//     </li>
//     <li class="pui-tab">
//       <a href="#contracts-inactive" class="pui-tab__anchor" role="tab" aria-selected="false" aria-controls="contracts-inactive" id="pui-tab-2" tabindex="-1">
//         <i class="pi-folder" focusable="false" aria-hidden="hidden"></i><span class="pui-tab__title">Inactive</span>
//       </a>
//     </li>
//     <li class="pui-tab">
//       <a href="#contracts-downlines" class="pui-tab__anchor" role="tab" aria-selected="false" aria-controls="contracts-downlines" id="pui-tab-3" tabindex="-1">
//         <i class="pi-users" focusable="false" aria-hidden="hidden"></i><span class="pui-tab__title">Downlines</span>
//       </a>
//     </li>
//   </ul>
//   <div class="pui-tab-panel" id="contracts-active" role="tabpanel" tabindex="0" aria-labelledby="pui-tab-1">
//     <div class="pui-tab__mobile-tab">
//      <span>Active</span>
//      <span class="pui-tab__icon-wrapper">
//        <i class="pi-plus"></i>
//      </span>
//     </div>
//     <div class="pui-tab-panel__inner">
//       <img src="https://placeimg.com/640/480/animals?t=1565635267224">
//     </div>
//   </div>
//   <div class="pui-tab-panel" id="contracts-inactive" role="tabpanel" tabindex="0" aria-labelledby="pui-tab-2" hidden>
//     <div class="pui-tab__mobile-tab">
//      <span>Inactive</span>
//      <span class="pui-tab__icon-wrapper">
//        <i class="pi-plus"></i>
//      </span>
//     </div>
//     <div class="pui-tab-panel__inner">
//       <img src="https://placeimg.com/640/480/animals?t=1565635322782">
//     </div>
//   </div>
//   <div class="pui-tab-panel" id="contracts-downlines" role="tabpanel" tabindex="0" aria-labelledby="pui-tab-3" hidden>
//     <div class="pui-tab__mobile-tab">
//      <span>Downlines</span>
//      <span class="pui-tab__icon-wrapper">
//        <i class="pi-plus"></i>
//      </span>
//     </div>
//     <div class="pui-tab-panel__inner">
//       <img src="https://placeimg.com/640/480/animals?t=1565635383449">
//     </div>
//   </div>
// </div>
//
//
// Styleguide Components.Tabs


// radio Tabs
// 
// 
// Markup:
// <div class="pui-tabs--radio">
//   <input type="radio" id="tab-input-a" name="tabs" checked>
//   <label for="tab-input-a">
//     <i class="fab fa-pied-piper-hat"></i> Tab 1
//   </label>
//   <div class="pui-tab--radio">
//     <img src="https://placeimg.com/640/480/animals?t=1565635383449">
//   </div>
//   <input type="radio" id="tab-input-b" name="tabs">
//   <label for="tab-input-b" class="tab-label">
//     <i class="fab fa-pied-piper-pp"></i> Tab 2
//   </label>
//   <div class="pui-tab--radio">
//     <img src="https://placeimg.com/640/480/animals?t=1565635267224">
//   </div>
//   <input type="radio" id="tab-input-c" name="tabs">
//   <label for="tab-input-c" class="tab-label">
//     <i class="fab fa-pied-piper"></i> Tab 3
//   </label>
//   <div class="pui-tab--radio">
//     <img src="https://placeimg.com/640/480/animals?t=1565635322782">
//   </div>
// </div>
// 
// 
// Styleguide Components.Tabs.radio

$tab-height:          4rem;
$tab-active-color:    map.get(config.$brand-colors, 'navy' );

.pui-tabs--radio {
  
  @include mixins.breakpoint(tablet, min) {
    display: flex;
    flex-wrap: wrap;
  }
  
  * {
    box-sizing: border-box;
  }
  
  input[type=radio] {
    appearance: none;
    position: absolute;
    
    &:checked {
      + label {
        
        @include mixins.breakpoint(tablet, max) {
          border-bottom: none; 
        }
        
        @include mixins.breakpoint(tablet, min) {
          background-color: #fff;
          color: #000;
        }
        
        + .pui-tab--radio {
          display: block;
        }
      }
    }
  }
  
  label {
    align-items: center;
    display: flex;
    height: 4rem;
    padding: .5rem 1rem;
    transition: all ease .2s;
    
    @include mixins.breakpoint(tablet, max) {
      border: 1px solid #003f70;
      background: #003f70;
      color: #fff;
      margin-top: .25rem;
    
      &:first-of-type {
        margin-top: 0;
      }
    }
    
    @media (min-width: 768px) {
      border: 1px solid transparent;
      color: #ccc;
      cursor: pointer;
      justify-content: center;
      margin: 0 .5rem;
      order: 1;
      
      &:first-of-type {
        margin-left: 0;
      }
      
      &:last-of-type {
        margin-right: 0;
      }
    }
  }
}

.pui-tab--radio {
  background-color: #fff;
  border: 1px solid #003f70;
  border-top: transparent;
  display: none;
  padding: .5rem;
  width: 100%;

  @include mixins.breakpoint(tablet, min) {
    border: none;
    flex-grow: 1;
    order: 99;
  }
}

.pui-tabs {
  background-color: map.get(variables.$greyscale, 'white');
  border: 1px solid color.adjust(map.get(variables.$greyscale, "light"), $lightness: math.percentage(config.$hue-threshold * 2));

  @include mixins.breakpoint(tablet, min) {
    margin-top: $tab-height;
    padding-top: $tab-height;
    padding: $tab-height variables.$spacer variables.$spacer;
  }  
}

.pui-tab-list {
  display: none;

  @include mixins.breakpoint(tablet, min) {
    display: flex;
    list-style-type: none;
    padding: 0;
    margin-bottom: variables.$spacer; // makes up for .pui-card padding-top
    margin-left: calc(-#{variables.$spacer} - 1px); // .pui-card padding + 1px border
    margin-top: calc(-#{$tab-height} * 2); // .pui-tab height
    width: calc(100% + (1rem + 1px) * 2);
  }
}

.pui-tab {
  flex: 1 1 auto;
  height: $tab-height;
  margin-bottom: 0;
  position: relative;

  @include mixins.breakpoint(tablet, min) {
    max-width: 16rem;
  }

  &__anchor {
    background-color: transparent;
    border: 1px solid transparent;
    color: map.get(variables.$greyscale, 'light' );
    cursor: pointer;
    font-size: 100%;
    height: 100%;
    padding: map.get(variables.$spacers, 2 ) variables.$spacer;
    position: relative;
    transition: config.$transitions;
    width: 100%;
    @extend %flex-center;

    @media (pointer: fine) {
      &:hover {
        background-color: map.get(variables.$greyscale, 'white' );
        border-color: color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold * 2));
        border-bottom-color: map.get(variables.$greyscale, 'white' );
        color: $tab-active-color;
        font-weight: 600;
      }
    }

    &:focus {
      outline: none;
    }

    &[aria-selected="true"] {
      background-color: map.get(variables.$greyscale, 'white' );
      border: 1px solid color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold * 2));
      border-bottom-color: map.get(variables.$greyscale, 'white' );
      color: $tab-active-color;
      font-weight: 600;

      @include mixins.breakpoint(tablet, min) {
        pointer-events: none;  
      }      

      &::before {
        background-color: $tab-active-color;
      }

      i {
        font-size: 100%;
      }
    }

    &::before {
      background-color: transparent;
      content: '';
      height: .3rem;
      left: -1px;
      position: absolute;
      right: -1px;
      top: 0;
      transition: config.$transitions;
      width: auto;
      border: none;
      border-radius: 0;
    }
  }

  i {
    @include mixins.breakpoint(tablet, max) {
      font-size: map.get(variables.$font-percentage, 'lg' );
    }
  }

  &__title {
    margin-left: map.get(variables.$spacers, 2 );
  }
}

.pui-tab-panel {

  @include mixins.breakpoint(tablet, max) {
    border: 1px solid $tab-active-color;
    display: block;
    min-height: 3rem;
    position: relative;
    margin-bottom: -2rem;

    &:not(:last-of-type) {
      margin-bottom: map.get(variables.$spacers, 1);
    }

    &[hidden="true"] {
      display: block;
    }
  }

  &.tab-active {

    @include mixins.breakpoint(tablet, max) {
      display: block;

      .pui-tab-panel__inner {
        height: auto;
        opacity: 1;
        visibility: visible;
      }

      .pui-tab__icon-wrapper {
        transform: rotate(45deg);
      }
    }
  }

  &:after {
    color: map.get(variables.$greyscale, 'white');
    font-family: "Font Awesome 5 Pro";
    font-weight: bold;
    position: absolute;
    right: 1rem;
    top: 1rem;
    transition: config.$transitions;
  }

  &__inner {
    @include mixins.breakpoint(tablet, max) {
      height: 0;
      opacity: 0;
      overflow: hidden;
      // padding: map.get(variables.$spacers, 3);
      transition: config.$transitions;
      visibility: hidden;
    }
  }
  
  &:focus {
    outline: none;
  }
}

.pui-tab__mobile-tab {
  background-color: $tab-active-color;
  color: map.get(variables.$greyscale, 'white');
  cursor: pointer;
  display: flex;
  font-weight: 600;
  justify-content: space-between;
  padding: map.get(variables.$spacers, 3);
  transition: config.$transitions;

  @include mixins.breakpoint(tablet, min) {
    display: none;
  }
}

.pui-tab__icon-wrapper {
  transition: config.$transitions; 
}
