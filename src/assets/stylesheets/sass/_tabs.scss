@use "config";
@use "mixins";
@use "variables";
@use "utilities";
@use "sass:color";
@use "sass:map";
@use "sass:math";

// Tabs
//
// The content for a tabbed section needs to live inside the `.pui-tabs` class. The tabs are radio inputs.
// Be sure to add a specific `id` to the input and add a `for` to the label with a value that matches the
// corresponding input. The label needs the class of `pui-tab`.
//
// The content for the tabs needs the class of `pui-tab-panel` and it needs to be directly after the `pui-tab` label.
//
// The tabs themselves or the `.pui-tab` have a specific width of `16rem` as well as a specific
// height of `4rem`.
//
// Markup:
// <div class="pui-tabs">
//   <input type="radio" id="tab-input-a" name="tabs" checked>
//   <label for="tab-input-a" class="pui-tab">
//     <i class="pi-folder-open" focusable="false" aria-hidden="hidden"></i> Tab 1
//   </label>
//   <div class="pui-tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635383449">
//   </div>
//   <input type="radio" id="tab-input-b" name="tabs">
//   <label for="tab-input-b" class="pui-tab">
//     <i class="pi-folder" focusable="false" aria-hidden="hidden"></i> Tab 2
//   </label>
//   <div class="pui-tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635267224">
//   </div>
//   <input type="radio" id="tab-input-c" name="tabs">
//   <label for="tab-input-c" class="pui-tab">
//     <i class="pi-users" focusable="false" aria-hidden="hidden"></i> Tab 3
//   </label>
//   <div class="pui-tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635322782">
//   </div>
// </div>
//
//
// Styleguide Components.Tabs


$tab-height:          3rem;
$tab-active-color:    map.get(config.$brand-colors, 'navy' );
$tab-border-color:    color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold * 2));

.pui-tabs {

  @include mixins.breakpoint(tablet, min) {
    display: flex;
    flex-wrap: wrap;
  }

  * {
    box-sizing: border-box;
  }

  input[type=radio] {
    appearance: none;
    position: absolute;

    &:not(:checked) {
      + .pui-tab {
        + .pui-tab-panel {
          display: none;
        }
      }
    }

    &:checked {
      + .pui-tab {
        border: 1px solid $tab-border-color;
        border-bottom-color: map.get(variables.$greyscale, 'white' );
        font-weight: 600;

        @include mixins.breakpoint(tablet, max) {
          border-bottom: none;
        }

        @include mixins.breakpoint(tablet, min) {
          background-color: #fff;
          color: $tab-active-color;

          &:before {
            background-color: $tab-active-color;
          }
        }

        &--flat {
          @include mixins.breakpoint(tablet, min) {
            border: none;
          }
        }
      }
    }
  }

  .pui-tab {
    align-items: center;
    display: flex;
    height: $tab-height;
    padding: map.get(variables.$spacers, 2 ) variables.$spacer;
    position: relative;
    transition: config.$transitions;

    @include mixins.breakpoint(tablet, max) {
      border: 1px solid #003f70;
      background: #003f70;
      color: #fff;
      margin-top: map.get(variables.$spacers, 1 );

      &:first-of-type {
        margin-top: 0;
      }
    }

    @include mixins.breakpoint(tablet, min) {
      flex: 1 1 auto;
      max-width: 16rem;
      border: 1px solid transparent;
      color: map.get(variables.$greyscale, 'base' );
      cursor: pointer;
      justify-content: center;
      margin-bottom: -1px;
      order: 1;
      z-index: 2;

      &::before {
        background-color: transparent;
        content: '';
        height: .3rem;
        left: -1px;
        position: absolute;
        right: -1px;
        top: 0;
        transition: config.$transitions;
        width: auto;
        border: none;
        border-radius: 0;
      }
    }

    @media (pointer: fine) {
      &:hover {
        background-color: map.get(variables.$greyscale, 'white' );
        border-color: $tab-border-color;
        border-bottom-color: map.get(variables.$greyscale, 'white' );
        color: $tab-active-color;
        font-weight: 600;
      }
    }

    &--flat {
      @include mixins.breakpoint(tablet, min) {
        border: none;
  
        &::before {
          bottom: 0;
          top: unset;
          left: 0; right: 0;
        }
      }

      @media (pointer: fine) {
        &:hover {
          background-color: map.get(variables.$greyscale, 'white' );
          color: rgba($tab-active-color, .7);
          font-weight: 600;

          &::before {
            background-color: rgba($tab-active-color, .7);
          }
        }
      }
    }
  }
}

.pui-tab-panel {
  background-color: map.get(variables.$greyscale, 'white');
  border: 1px solid $tab-border-color;
  padding: map.get(variables.$spacers, 2 );
  position: relative;
  width: 100%;

  @include mixins.breakpoint(tablet, max) {
    border-top: transparent;
  }

  @include mixins.breakpoint(tablet, min) {
    flex-grow: 1;
    order: 99;
    padding-top: calc(#{map.get(variables.$spacers, 2 )} + 1px);
    z-index: 1;
  }
}
