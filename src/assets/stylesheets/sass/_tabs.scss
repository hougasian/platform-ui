@use "config";
@use "mixins";
@use "variables";
@use "utilities";
@use "sass:color";
@use "sass:map";
@use "sass:math";

// Tabs
//
// The content for a tabbed section needs to live inside the `.tabs` class. The tabs are radio inputs.
// Be sure to add a specific `id` to the input and add a `for` to the label with a value that matches the
// corresponding input. The label needs the class of `tab`.
//
// The content for the tabs needs the class of `tab-panel` and it needs to be directly after the `tab` label.
//
// The tabs themselves or the `.tab` have a specific width of `16rem` as well as a specific
// height of `4rem`.
// 
// Work in progress. At a mobile resolution (below 768px) an active tab will collapse when clicked. 
//
// Markup:
// <div class="tabs">
//   <input type="radio" id="tab-input-a" name="tabs" checked>
//   <label for="tab-input-a" class="tab">
//     <i class="pi-folder-open" focusable="false" aria-hidden="hidden"></i> Tab 1
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635383449" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-b" name="tabs">
//   <label for="tab-input-b" class="tab">
//     <i class="pi-folder" focusable="false" aria-hidden="hidden"></i> Tab 2
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635267224" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-c" name="tabs">
//   <label for="tab-input-c" class="tab">
//     <i class="pi-users" focusable="false" aria-hidden="hidden"></i> Tab 3
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635322782" style="max-width: 100%;">
//   </div>
// </div>
//
//
// Styleguide Components.Tabs


// Tabs Flat
// 
// If you want the borders removed from the tabs, add the class `tab--flat` to the `tab`.
// 
// Markup:
// <div class="tabs tabs--flat">
//   <input type="radio" id="tab-input-2a" name="tabs-2" checked>
//   <label for="tab-input-2a" class="tab">
//     <i class="pi-folder-open" focusable="false" aria-hidden="hidden"></i> Tab 1
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635383449" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-2b" name="tabs-2">
//   <label for="tab-input-2b" class="tab">
//     <i class="pi-folder" focusable="false" aria-hidden="hidden"></i> Tab 2
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635267224" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-2c" name="tabs-2">
//   <label for="tab-input-2c" class="tab">
//     <i class="pi-users" focusable="false" aria-hidden="hidden"></i> Tab 3
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635322782" style="max-width: 100%;">
//   </div>
// </div>
// 
// Styleguide Components.Tabs.Flat


// Tabs Flat-Responsive 
// 
// The flat tabs do not change at lower/higher screen resolutions. You can make the tabs respond, however, by adding
// the class `responsive` to `tabs tabs--flat`. This will make the tabs stack at the mobile breakpoint and 
// go back to the flat tab look above mobile.
// 
// Markup:
// <div class="tabs tabs--flat responsive">
//   <input type="radio" id="tab-input-ar" name="tabs-r" checked>
//   <label for="tab-input-ar" class="tab">
//     <i class="pi-folder-open" focusable="false" aria-hidden="hidden"></i> Tab 1
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635383449" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-br" name="tabs-r">
//   <label for="tab-input-br" class="tab">
//     <i class="pi-folder" focusable="false" aria-hidden="hidden"></i> Tab 2
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635267224" style="max-width: 100%;">
//   </div>
//   <input type="radio" id="tab-input-cr" name="tabs-r">
//   <label for="tab-input-cr" class="tab">
//     <i class="pi-users" focusable="false" aria-hidden="hidden"></i> Tab 3
//   </label>
//   <div class="tab-panel">
//     <img src="https://placeimg.com/640/480/animals?t=1565635322782" style="max-width: 100%;">
//   </div>
// </div>
// 
// Styleguide Components.Tabs.FlatResponsive


$tab-height:          3rem;
$tab-active-color:    map.get(config.$brand-colors, 'navy' );
$tab-border-color:    color.adjust(map.get(variables.$greyscale, 'light'), $lightness: math.percentage(config.$hue-threshold * 2));

@mixin tabs($pui: null) {

  $tab: null;

  @if $pui {
    $tab: '.pui-tab';
  } @else {
    $tab: '.tab';
  }

  @include mixins.breakpoint(tablet, min) {
    display: flex;
    flex-wrap: wrap;
  }

  * {
    box-sizing: border-box;
  }

  input[type=radio] {
    appearance: none;
    opacity: 0;
    position: absolute;

    &:checked {
      + #{$tab} {
        border: 1px solid $tab-border-color;
        border-bottom-color: map.get(variables.$greyscale, 'white' );
        font-weight: 600;

        @include mixins.breakpoint(tablet, max) {
          border-bottom: none;
        }

        @include mixins.breakpoint(tablet, min) {
          background-color: map.get(variables.$greyscale, 'white');
          color: $tab-active-color;

          &:before {
            background-color: $tab-active-color;
          }
        }

        + #{$tab}-panel {
          display: block;
        }
      }

      &.un-checked {
        + label {
          font-weight: 300;
          
          + #{$tab}-panel {
            display: none!important;
          }
        } 
      }    
    }
  }

  #{$tab} {
    align-items: center;
    display: flex;
    height: $tab-height;
    padding: map.get(variables.$spacers, 2 ) variables.$spacer;
    position: relative;
    transition: config.$transitions;

    @include mixins.breakpoint(tablet, max) {
      border: 1px solid $tab-active-color;
      background: $tab-active-color;
      color: map.get(variables.$greyscale, 'white');
      margin-top: map.get(variables.$spacers, 1 );

      &:first-of-type {
        margin-top: 0;
      }
    }

    @include mixins.breakpoint(tablet, min) {
      flex: 1 1 auto;
      max-width: 16rem;
      border: 1px solid transparent;
      color: map.get(variables.$greyscale, 'base' );
      cursor: pointer;
      justify-content: center;
      margin-bottom: -1px;
      order: 1;
      z-index: 2;

      &::before {
        background-color: transparent;
        content: '';
        height: .3rem;
        left: -1px;
        position: absolute;
        right: -1px;
        top: 0;
        transition: config.$transitions;
        width: auto;
        border: none;
        border-radius: 0;
      }
    }
  }
  
  input[type=radio] {
    &:not(:checked) {
      + #{$tab} {

        @media (pointer: fine) {
          &:hover {
            background-color: map.get(variables.$greyscale, 'white' );
            border-color: $tab-border-color;
            color: $tab-active-color;
            font-weight: 600;
    
            @include mixins.breakpoint(tablet, min) {
              border-bottom-color: map.get(variables.$greyscale, 'white' );
            }
          }
        }
      }
    }
  }

  #{$tab}-panel {
    display: none;
  }
}

.pui-tabs {
  @include tabs(true);
}

.tabs {
  @include tabs();
}


@mixin tabs-flat($pui: null) {

  $tab: null;

  @if $pui {
    $tab: '.pui-tab';
  } @else {
    $tab: '.tab';
  }

  display: flex;
  flex-wrap: wrap;

  input[type=radio] {
    &:not(:checked) {
      + #{$tab} {
        @media (pointer: fine) {
          &:hover {
            background-color: map.get(variables.$greyscale, 'white' );
            color: rgba($tab-active-color, .7);
            font-weight: 600;

            &::before {
              background-color: rgba($tab-active-color, .7);
            }
          }
        }
      }
    }

    &:checked {
      + #{$tab} {
        border: none;
        color: $tab-active-color;
        
        &:before {
          background-color: $tab-active-color;
        }
      }
    }
  }

  #{$tab} {
    background: map.get(variables.$greyscale, 'white');
    border: none;
    color: map.get(variables.$greyscale, 'base' );
    flex: 0 0 auto;
    height: auto;
    margin: 0 1rem;
    order: 1;
    z-index: auto;

    &:before {
      background-color: transparent;
      border: none;
      bottom: 0;
      content: '';
      height: .3rem;
      left: 0;
      position: absolute;
      right: 0;
      top: unset;
      transition: config.$transitions;
      width: auto;
    }
  }

  #{$tab}-panel {
    border: none;
    border-top: 1px solid $tab-border-color;
    z-index: auto;

    @include mixins.breakpoint(tablet, max) {
      flex-grow: 1;
      order: 99;      
    }
  }

  &.responsive {
    @include mixins.breakpoint(tablet, max) {
      display: block;
      flex-wrap: unset;
    }    

    #{$tab} {
      @include mixins.breakpoint(tablet, max) {
        align-items: center;
        border: 1px solid $tab-active-color;
        background: $tab-active-color;
        color: map.get(variables.$greyscale, 'white');
        display: flex;
        height: $tab-height;
        margin: map.get(variables.$spacers, 1 ) 0 0;
        padding: map.get(variables.$spacers, 2 ) variables.$spacer;
        position: relative;
        transition: .2s;

        &:before {
          display: none;
        }
  
        &:first-of-type {
          margin-top: 0;
        }
      }
    }

    input[type=radio] {
  
      &:checked {
        + #{$tab} {          
          @include mixins.breakpoint(tablet, max) {
            border: 1px solid $tab-border-color;
            border-bottom: none;
            color: map.get(variables.$greyscale, 'white');
            font-weight: 600;
          }
        }
      }
    }

    #{$tab}-panel {
      @include mixins.breakpoint(tablet, max) {
        background-color: map.get(variables.$greyscale, 'white');
        border: 1px solid $tab-border-color;
      }     
    }
  }
}

.pui-tabs--flat {
  @include tabs-flat(true);
}

.tabs--flat {
  @include tabs-flat;
}

@mixin tab-panel {
  background-color: map.get(variables.$greyscale, 'white');
  border: 1px solid $tab-border-color;
  padding: map.get(variables.$spacers, 2 );
  position: relative;
  width: 100%;

  @include mixins.breakpoint(tablet, max) {
    border-top: transparent;
  }

  @include mixins.breakpoint(tablet, min) {
    flex-grow: 1;
    order: 99;
    padding-top: calc(#{map.get(variables.$spacers, 2 )} + 1px);
    z-index: 1;
  }
}

.pui-tab-panel {
  @include tab-panel;
}

.tab-panel {
  @include tab-panel;
}
