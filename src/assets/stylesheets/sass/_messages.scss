@use "config";
@use "mixins";
@use "variables";
@use "sass:color";
@use "sass:math";
@use "sass:map";

// Messages
//
// These are examples of global messages or alerts
//
// Markup:
// <div class="message message--error">
//   <h2 class="message__heading">Error</h2>
//   <p>This is an example of a message that fires after an error has occured. </p>
//   <p>This is an example of a message that fires after an error has occured. </p>
//   <p>This is an example of a message that fires after an error has occured. </p>
// </div>
// <div class="message message--success">
//   <p>This is an example of a message that displays a success message. Congratulations! You're form has been submitted. </p>
// </div>
// <div class="message message--warning">
//   <p>This is an example of a message that displays a warning but not necessarily an error.</p>
// </div>
// <div class="message message--info">
//   <p>This is an example of a message that displays some simple information.</p>
// </div>
// <div class="message message--error" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that fires after an error has occured. </p>
// </div>
// <div class="message message--success" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays a success message. Congratulations! You're form has been submitted. </p>
// </div>
// <div class="message message--warning" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays a warning but not necessarily an error.</p>
// </div>
// <div class="message message--info" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays some simple information.</p>
// </div>
//
//Styleguide Components.Messages

.message {
  $self: &;
  --message-background: var(--lighter);
  --message-border: var(--base);
  --message-color: var(--dark);
  
  background-color: var(--message-background);
  border-left: thick solid var(--message-border);
  color: var(--message-color);
  margin: map.get(variables.$spacers, 2 ) 0;
  padding: map.get(variables.$spacers, 2 );

  // button close needs to be an independant concept to be placed
  // anywhere

  &__close {
    position: absolute;
    top: map.get(variables.$spacers, 2 );
    right: map.get(variables.$spacers, 2 );
  }

  &__heading {
    color: var(--message-color);
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: map.get(variables.$spacers, 2 );
  }
  
  > p {
    margin-bottom: map.get(variables.$spacers, 2 );

    &:last-of-type {
      margin-bottom: 0;
    }
  }
  // ----------

  @each $name, $color in variables.$message-colors {
    &--#{$name} {
      --message-background: #{$color};
      --message-border: #{color.adjust($color, $lightness: math.percentage(-(config.$hue-threshold * 5)))};
      --message-color: #{color.adjust($color, $lightness: math.percentage(-(config.$hue-threshold * 6)))};
    }
  }
}