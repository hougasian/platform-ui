@use "config";
@use "mixins";
@use "variables";
@use "sass:color";
@use "sass:math";
@use "sass:map";

// Messages
//
// These are examples of global messages or alerts
//
// Markup:
// <div class="message message--error">
//   <p>This is an example of a message that fires after an error has occured. </p>
// </div>
// <div class="message message--success">
//   <p>This is an example of a message that displays a success message. Congratulations! You're form has been submitted. </p>
// </div>
// <div class="message message--warning">
//   <p>This is an example of a message that displays a warning but not necessarily an error.</p>
// </div>
// <div class="message message--info">
//   <p>This is an example of a message that displays some simple information.</p>
// </div>
// <div class="message message--error" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that fires after an error has occured. </p>
// </div>
// <div class="message message--success" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays a success message. Congratulations! You're form has been submitted. </p>
// </div>
// <div class="message message--warning" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays a warning but not necessarily an error.</p>
// </div>
// <div class="message message--info" data-header="Alternate heading based on data-header">
//   <p>This is an example of a message that displays some simple information.</p>
// </div>
//
//Styleguide Components.Messages

@mixin message {
  $self: &;
  display: flex;
  flex-direction: column;
  margin: map.get(variables.$spacers, 2 ) 0;
  padding: map.get(variables.$spacers, 2 );
  p {
    margin: map.get(variables.$spacers, 2 ) 0;
  }

  // button close needs to be an independant concept to be placed
  // anywhere

  &__close {
    position: absolute;
    top: map.get(variables.$spacers, 2 );
    right: map.get(variables.$spacers, 2 );
  }
  .button--close {
    float: right;
  }

  // ----------

  @each $name, $color in variables.$message-colors {
    &--#{$name} {
      background-color: $color;
      border-left: 1px solid color.adjust($color, $lightness: math.percentage(-(config.$hue-threshold * 5)));
      border-left-width: thick;
      color: color.adjust($color, $lightness: math.percentage(-(config.$hue-threshold * 6)));
      &:before {
        content: $name;
        display: flex;
        font-size: 80%;
        font-weight: bold;
        margin-bottom: map.get(variables.$spacers, 2 );
        text-transform: uppercase;
      }
      &[data-header]:before {
        content: attr(data-header);
      }
    }
  }
}

.pui-message {
  @include message;
}

.message {
  @include message;
}