@use "variables";

// Flex
//
// Flexbox utilities to use when flexbox is present.
//
// Usage:
// `.flex .flex--align-center`
//
// `.flex--center-content` centers content horizontaly and vertically. it includes `display: flex`
//
// | Class Name             |                         |                         |                      |                          |
// | ---------------------- | ----------------------- | ----------------------- | -------------------- | ------------------------ |
// | `flex--align-center`   | `flex--column`          | `flex--justify-between` | `flex--justify-end`  | `flex--justify-start`    |
// | `flex--justify-center` | `flex--wrap`            | `flex--grow`            | `flex-inline`        | `flex--align-baseline`   |
// | `flex--align-start`    | `flex--align-end`       | `flex--align-center`    | `flex-nowrap`        | `flex--justify-between`  |
// | `flex--row-reverse`    | `flex--column-reverse`  | `flex--align-center`    | `flex-nowrap`        | `flex--justify-between`  |
//
// Styleguide Utilities.Flex

.flex {
  display: flex;

  &-inline {
    display: inline-flex;
  }

  &--wrap {
    flex-wrap: wrap;
  }

  &--nowrap {
    flex-wrap: nowrap
  }

  &--grow {
    flex-grow: 1;
  }
}

@each $key, $val in variables.$flex-align {
  .flex--align-#{$key} {
    align-items: #{$val};
  }
}

@each $key, $val in variables.$flex-direction {
  .flex--#{$key} {
    flex-direction: #{$val};
  }
}

@each $key, $val in variables.$flex-justify {
  .flex--justify-#{$key} {
    justify-content: #{$val};
  }
}

// horizontaly and vertically center content
.flex--center-content {
  @extend %flex-center;
}
