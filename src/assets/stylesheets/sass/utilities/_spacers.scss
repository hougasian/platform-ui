@use "config";
@use "variables";
@use "sass:map";

// Spacers
//
// We've included spacing utilities for padding and margin that work almost the same as Bootstrap 4.x. These cover
// left, right, x-axis (right _and_ left), and y-axis (top _and_ bottom).
//
// Usage:
// `<p or m>< direction: l, r, x, y >-<key from $spacers map>`
//
// Example:
// ```scss
// .pl-2 // padding-left: .5rem;
// .mx-3 // margin: 0 1rem;
// ```
//
// Map:
// ```scss
// $spacer: 1rem;
// $spacers: (
//   0: 0,
//   1: ($spacer * .25),
//   2: ($spacer * .5),
//   3: $spacer,
//   4: ($spacer * 2),
//   5: ($spacer * 3),
//   6: ($spacer * 4.5),
//   7: ($spacer * 6.5)
// );
// ```
//
// Styleguide Utilities.Spacers

// Responsive
//
// Currently we only have responsive spacers for mobile. We are also only using them for `margin-bottom` and `padding-bottom`.
//
// Example:
// ```scss
// .mobile-mb-3 // margin-bottom: 1rem
// .mobile-pb-3 // padding-bottom: 1rem
// ```
//
// Styleguide Utilities.Spacers.Responsive

@each $prop, $letter in (margin: m, padding: p) {
  @each $direction, $d in variables.$xy-border {
    @each $unit, $rem in variables.$spacers {
      .#{$letter}#{$d}-#{$unit} {
        #{$prop}-#{$direction}: #{$rem} !important;
      }
      .#{$letter}x-#{$unit} {
        #{$prop}-left: $rem !important;
        #{$prop}-right: $rem !important;
      }
      .#{$letter}y-#{$unit} {
        #{$prop}-top: $rem !important;
        #{$prop}-bottom: $rem !important;
      }
    }
  }
}

@each $prop, $letter in (margin: m, padding: p) {
  @each $unit, $rem in variables.$spacers {
    .#{$letter}b-mobile-#{$unit} {
      @media screen and (min-width: map.get(config.$breakpoints, mobile)) and (max-width: map.get(config.$breakpoints, tablet) - 1) {
        #{$prop}-bottom: #{$rem} !important;
      }
    }
  }
}
