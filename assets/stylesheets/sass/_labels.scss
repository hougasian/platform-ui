.ui.corner.label {
  &.bottom {
    // subtract height set by SUI
    top: calc(100% - 4em);
    .icon {
      top: calc(100% - 1.5em)
    }
    &:after {
    position: absolute;
    content: "";
    z-index: -1;
    width: 0px;
    height: 0px;
    background-color: transparent;
    border-top: 4em solid transparent;
    border-right: 0px solid tranparent;
    border-bottom: 0px solid;
    border-left: 4em solid transparent;
    transition: border-color 0.1s ease;
    }
  }
  &.clear {
    border-color: transparent !important;
  }
}

// generate status classes based on $status-list
// add/remove status by editing this array in _vars.scss
@each $status in $status-list {
  $i: index($status-list, $status);
  $color: adjust-hue($color-purple, $i * 55);
  .#{$status} {
    background-color: $color !important;
    @if $status == 'mga' {
      text-transform: uppercase !important;
    }
  }
}

.ui.label {
  color: rgba($color-white, .9);
  font-weight: lighter;
  margin-bottom: .5rem;
  text-transform: capitalize;

  .ban {
    color: rgba($color-white, .5);
    margin-right: .4rem;
    transform: scale(1.3);
  }

  &.neutral {
    @include status-color($color-neutral);
  }
  &.negative {
    @include status-color($color-negative);
  }
  &.positive {
    @include status-color($color-positive);
  }

  &.active-status {
    @extend .positive;
  }
  &.inactive-status {
    @extend .neutral;
  }

  &[class*='opt-out'],
  &[class*='do-not'] {
    @include status-color($color-orange);
  }
}

// agent/agency contract tab labels
.tab.contracts-container {
  .secondary.menu {
    flex-wrap: wrap;
  }
  .ui.menu .item>.label {
    margin-left: 0;
    margin-right: .3rem;
  }
  .label.basic {
      background: transparent !important;
      border-color: $grey-light;
      border-radius: .3rem;
      color: $grey-light;
      cursor: pointer;
      display: inline-block;
      margin-bottom: .5rem;
      padding: .3rem .5rem;
    &.active {
      border: 1px solid $color-yellow;
      border-radius: .3rem !important;
      color: $color-yellow !important;
    }
  }
}

.ui.checkbox {
  label[for] {
    cursor: pointer;
  }
}
