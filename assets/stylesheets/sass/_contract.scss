.product-label {
  background: rgba($color-yellow, .4);
  box-shadow: 0 0 1px $color-yellow-dark;
  border-radius: .3rem !important;
  color: darken($color-yellow-dark, 5%) !important;
  font-weight: inherit;
  margin-bottom: .5rem;
  .producer-contract &,
  .compliance-board & {
    display: inline-flex;
    padding: .3rem .5rem;
  }
  &.inverted {
    background: rgba(lighten($color-yellow, 20%), .9);
    box-shadow: 0 0 1px lighten($color-yellow-dark, 10%);
    margin: 0;
  }
  &.item:not(.active) {
    border-color: $grey-lighter !important;
  }
}

.contract-template-cmp {
  .checkbox.field.right {
    margin-top: 0;
  }
}

.awn-state-label {
  background: rgba($color-link, .6);
  box-shadow: 0 0 0 1px $color-link;
  color: $color-white;
}


.ui.accordion.contract,
// .styled.accordion makes accessible to producers > contracts
.ui.styled.accordion {
  > .title {
    padding: 1rem;
    // agent contracts; contract name
    .grid :first-child {
      align-self: center;
    }
  }
  .add-states {
    .label {
      margin-right: .3rem;
    }
  }
  .contract-template-products {
    .product-container:not(.add-states) {
      .add-product,
      .product-selection {
        display: none;
      }
    }
    .trash.icon {
      margin: 0 0 0 1rem !important;
      &:before {
        border-left: 1px solid $color-white;
        padding-left: .5rem;
      }
      &:hover {
        color: $color-red;
      }
    }
    .tabular.menu {
      flex-wrap: wrap;
      .add.icon {
        margin: .7rem 0 0 .2rem;
      }
      .item {
        background: transparent;
        border: 1px solid $grey;
        margin-bottom: .5rem;
        &.active {
          @extend .product-label;
        }
      }
    }
  }
}

.states,
.add-contract .states,
.contract-template-products {
  .ui.slider.checkbox.states-select {
    width: 100%;
    label {
      margin-left: -.5rem;
      margin-top: 1rem;
    }
  }
  .certification {
    .label {
      @extend .awn-state-label;
    }
    .field {
    // add certification form initially hidden
    display: none;
  }
    .title {
      color: $grey-dark;
      padding-bottom: .5rem;
    }
    .ui.label>.icon {
      color: $grey-light;
      margin: 0 0 0 .5rem !important;
    }
  }
}

.cert {
  &-selection {
    background: rgba($color-menu-bkg, .7);
    color: $color-white;
    display: none;
    padding: 1rem;
    margin: auto -2rem;
    .label {
      cursor: pointer;
      margin-right: .5rem;
    }
    .close-div {
      margin: 0;
      width: initial !important;
    }
  }
}
.add-contract {
  display: none;
  border: none;
  .four.wide.column {
    padding-top: 4.5rem;
  }
  .content {
    border: none;
    .header:not(.title) {
      border-bottom: 1px dashed lighten($color-link, 25%);
      margin-bottom: 1rem;
      padding-bottom: 1rem;
    }
  }
  &:hover {
    box-shadow: none;
  }
}

// note component controls for contextual notes
// lives in carrier contract section
.note-actions {
  .value {
    padding-right: .3rem;
  }
}

// per-state awn
.awn {
  &-view {
    color: $grey-dark;
    cursor: pointer;
    font-size: 95%;
    padding: 1rem;
    text-align: center;
  }
  &.row {
    display: flex;
    padding: 1rem !important;
    h3 {
      display: block;
      width: 100%;
    }
    .ui.form .field {
      margin: 0 0 1rem !important;
    }
    .form {
      display: flex;
      padding-right: .5rem;
      width: 10rem;
      .label {
        @extend .awn-state-label;
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        height: 2rem;
      }
      input {
        padding: 0 1rem !important;
      }
    }
  }
}

.cert-selection {
  .ui.selection.dropdown {
    background: transparent;
    color: $color-white;
  }
}
[data-certification-year] {
  &:empty {
    // this depends on no whitespace!
    display: none;
  }
  &:before {
    content: attr(data-certification-year);
    color: $grey-dark;
    display: block;
    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;
    font-size: 120%;
    font-weight: bold;
    margin: .5rem 0;
  }
}

.status.icon {
  margin: 3rem 0 0 -1rem;
}

.status-filters {
  color: $grey-light;
  display: none;
  &:not(.flow) {
    margin: 1rem -1rem;
  }
  padding: 1rem;
  @include rgba-background-color($color-menu-bkg, .7);
  .label {
    &.image {
      &[disabled] {
        opacity: .4;
      }
      background: rgba($color-menu-bkg, .3);
      box-shadow: 0 0 1px $grey-light;
      cursor: pointer;
      margin-bottom: .3rem;
      margin-right: .3rem;
    }
  }
}

.center.aligned-column {
  align-self: center;
}

.reason {
  padding-bottom: 2rem;
  input {
    color: $color-white !important;
  }
  label {
    .alert {
      color: $color-pink;
      display: inline;
      padding-left: .3rem;
    }
  }
}

.expanding {
  .column {
    .extra.content {
      @extend %truncate-with-ellipsis;
    }
  }
}

.accordion{
  &.agent-accordion,
  &.agency-accordion {
    .column:not(.menu-column) {
      @extend %truncate-with-ellipsis;
    }
  }
}

// flow filters
.app.body .stackable.grid.flow {
  padding-top: 6rem !important;
}

.filter {
  &-flow.ui.segment {
    background: lighten($color-menu-bkg, 5%);
    border-radius: 0px;
    color: $grey-light;
    padding-top: 7rem;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1;

    .ui.form {
      input,
      select {
        color: $grey !important;
      }
      .field.inline-error{
        margin-bottom: .25rem;
      }
    }

    .two.fields {
      margin-top: -1rem;
      margin-bottom: -1.2rem;
    }

    .image.label {
      background: rgba($color-white, .25);
      border:  1px solid rgba($grey-light, .4) !important;
      color: $grey-light;
      cursor: pointer;
      display: inline-flex;
      margin: 0 .5rem .5rem 0;
      transition: .2s;
      &:hover {
        border-color: $color-yellow !important;
      }
    }
  }
  &-status {
    align-items: center;
    color: $color-yellow !important;
    display: flex;
    flex-direction: row;
    justify-content: center;
    font-size: 125% !important;
    padding: 1rem;
    .undo.icon {
      align-self: end;
      margin-left: 1rem;
    }
  }
  &-label {
    border: 1px solid lighten($color-yellow, 20%);
    color: lighten($color-yellow, 20%);
    display: flex;
    padding: .3rem .5rem;
    margin: 0 .2rem;
    >span {
      opacity: .5;
      padding-right: .3rem;
    }
    .remove {
      color: $color-pink;
      padding-left: .3rem;
    }
  }
  &-tab {
    background: lighten($color-menu-bkg, 5%);
    border-bottom-left-radius: .3rem;
    border-bottom-right-radius: .3rem;
    bottom: -1.2rem;
    cursor: pointer;
    left: calc(50% - 1.5rem);
    padding: 0 .5rem .4rem;
    position: absolute;
    transition: .2s;
    &:hover {
      color: $color-yellow;
    }
  }
  &-item {
    background-color: lighten($color-yellow, 20%);
    opacity: .65 !important;
    color: lighten($color-menu-bkg, 5%);
    border-radius: 5px;
    padding: .05rem .3rem;
    margin-left: .25rem;
    font-size: .85rem;
    &>i {
      transition: font-size .5s;
      &:hover {
        font-size: 1rem !important;
      }
    }
  }
  .row:last-of-type {
    .ui.header {
      color: $grey;
    }
    .ui.container {
      padding: 2rem 0 0;
    }
  }
}

.flow-highlight {
  background: $color-help;
  border-bottom: 1px solid darken($color-help, 10%);
  color: darken($help-text, 10%);
  display: flex;
  flex-direction: column;
  margin: -1rem -2rem;
  padding: 1rem !important;
}

.flow {
  &.pre-title {
    padding: 1rem;
    .row {
      align-items: center !important;
      padding: 0 1rem !important;
      &.bar {
        margin-bottom: 2rem;
      }
    }
    .map-marker {
      margin-left: auto;
    }
  }
}
