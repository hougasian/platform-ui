// Button
//
// Each button has a default button style. Color can be added to any button using a combination of background and text utilities.
//
// Add icons to buttons using <a href="https://fontawesome.com/icons">Font Awesome</a> icons: `<i class="fas fa-plus"></i>`
//
// Weight: 1
//
// Styleguide Components.Button

// Default
//
// The default platform button. Usually paired visually with an icon. Can be the default size or large.
//
// - .button
// - .button .button--lg
//
// Markup:
// <button class="button">Basic Button</button>
// <button class="button">Add <i class="fas fa-plus"></i></button>
// <button class="button button--lg">Add <i class="fas fa-plus"></i></button>
//
// Weight: 2
//
// Styleguide Components.Button.Default

// Secondary
//
// The secondary platform button. Always a round button paired witha Font Awesome icon. Can be the default size or large.
//
// - .button
// - .button .button--secondary
// - .button .button--secondary .button--lg
//
// Markup:
// <button class="button button--secondary"><i class="fas fa-download"></i></button>
//
// Weight: 3
//
// Styleguide Components.Button.Secondary

// Post
//
// Used exclsively in Post, or blog, content imported into the platform. e.g., CRM dashboard.
//
// - .button .button--post
// - .button .button--post .button--lg
//
// Markup:
// <button class="button button--post">Post Button</button>
// <button class="button button--post button--lg">Large Post Button</button>
//
// Weight: 4
//
// Styleguide Components.Button.Post

// Group
//
// Evenly space any group of buttons.
//
// - .button--group
//
// Markup:
// <div class="button-group">
//   <a class="button button--secondary"><i class="fas fa-download"></i></a>
//   <a class="button button--secondary"><i class="fas fa-chart-pie"></i></a>
//   <a class="button button--secondary"><i class="fas fa-chart-line"></i></a>
// </div>
//
// Weight: 5
//
// Styleguide Components.Button.Group


.button {

  $border-radius: map-get($radius, 'button');
  $primary-background: map-get($greyscale, 'white');
  $primary-color: map-get($greyscale, 'base');
  $secondary-background: map-get($brand-colors, 'salmon');
  $secondary-color: map-get($greyscale, 'white');

  background-color: $primary-background;
  border: 1px solid lighten(map-get($greyscale, 'light'), $hue-threshold * 2);
  border-radius: $border-radius;
  color: $primary-color;
  cursor: pointer;
  font-family: map-get($fonts, 'base');
  font-size: map-get($fonts, 'size');
  padding: map-get($spacers, 1) $spacer;
  transition: $duration;

  i {
    margin: 0 map-get($spacers, 1);
  }

  &:hover {
    background-color: $secondary-background;
    border-color: inherit;
    color: $secondary-color;
  }

  &--secondary {
    background-color: $secondary-background;
    border: 1px solid $secondary-background;
    color: $secondary-color;
    border-radius: $border-radius * 100;
    padding: 0;
    width: 2rem;
    height: 2rem;
    @extend %flex-center;

    &:hover {
      background-color: darken($secondary-background, $hue-threshold);
      box-shadow: 0 0 0 .3rem lighten($secondary-background, $hue-threshold);
    }
  }

  &--post {
    background-color: $secondary-background;
    border: 1px solid $secondary-background;
    color: $secondary-color;
    transition: $transitions;

    &:hover {
      background-color: darken($secondary-background, 10%);
      background-image: linear-gradient(45deg, $secondary-background, darken($secondary-background, $hue-threshold * 2));
    }
  }

  &--lg {
    font-size: map-get($font-percentage, 'lg');
    padding: map-get($spacers, 2) $spacer;
  }
}

.button-group {
  display: flex;
  align-items: center;

  .button {
    margin: 0 map-get($spacers, 1);

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}
